{"version":3,"sources":["components/ToolbarOptions.js","components/Toolbar.js","components/EmployeeRow.js","components/EmployeeHeader.js","assets/processData.js","App.js","index.js"],"names":["ToolbarOptions","props","className","barState","children","Toolbar","state","filterOptionsBar","filterBy","filterValue","sortOptionsBar","sortBy","sortValue","handleHideAllBars","setState","handleBarToggle","toolbarKey","handleChangeInput","event","name","target","value","onClick","this","htmlFor","onChange","type","placeholder","filterCB","sortCB","React","Component","EmployeeRow","employeeId","firstName","lastName","position","salary","phoneNumber","email","address","hireDate","EmployeeHeader","processData","filter","data","dataFiltered","i","length","push","sort","filterData","dataSorted","hasSwitched","hold","reverse","App","employeeTable","handleEmployeeTable","renderData","entries","index","employee","id","city","zip","handleFilterData","e","preventDefault","employeeData","handleSortData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6p0BAWeA,G,YARQ,SAAAC,GACnB,OACI,yBAASC,UAAS,0BAAqBD,EAAME,UAA7C,SACKF,EAAMG,aCgIJC,E,4MA/HXC,MAAQ,CACJC,iBAAkB,WAClBC,SAAU,KACVC,YAAa,GACbC,eAAgB,WAChBC,OAAQ,KACRC,UAAW,I,EAGfC,kBAAoB,WACoB,aAAhC,EAAKP,MAAMC,kBACX,EAAKO,SAAS,CAAEP,iBAAkB,aAEJ,aAA9B,EAAKD,MAAMI,gBACX,EAAKI,SAAS,CAAEJ,eAAgB,c,EAKxCK,gBAAkB,SAAAC,GACiB,aAA3B,EAAKV,MAAMU,IAAyD,aAA3B,EAAKV,MAAMU,IACpD,EAAKH,oBACL,EAAKC,SAAL,eAAiBE,EAAa,cAG9B,EAAKF,SAAL,eAAiBE,EAAa,c,EAItCC,kBAAoB,SAAAC,GAChB,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAEzB,EAAKP,SAAL,eAAiBK,EAAOE,K,uDAGlB,IAAD,OACL,OACI,mCACI,gCACI,oDAEA,+BAEI,oBAAIC,QAAS,kBAAM,EAAKP,gBAAgB,qBAAxC,oBACA,oBAAIO,QAAS,kBAAM,EAAKP,gBAAgB,mBAAxC,wBAKR,cAAC,EAAD,CAAwBZ,SAAUoB,KAAKjB,MAAMC,iBAA7C,SACI,iCAEI,uBAAOiB,QAAQ,WAAf,uBACA,yBAAQL,KAAK,WAAWM,SAAUF,KAAKN,kBAAvC,UACI,wBAAQI,MAAM,KAAd,gBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,0BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,0BAIJ,uBACIF,KAAK,cACLO,KAAK,OACLD,SAAUF,KAAKN,kBACfI,MAAOE,KAAKjB,MAAMG,YAClBkB,YAAY,UAIhB,wBAAQD,KAAK,SAASJ,QAAS,SAAAJ,GAC3B,EAAKL,oBACL,EAAKZ,MAAM2B,SAASV,EAAO,EAAKZ,MAAME,SAAU,EAAKF,MAAMG,cAF/D,wBA1BY,KAiCpB,cAAC,EAAD,CAAwBN,SAAUoB,KAAKjB,MAAMI,eAA7C,SACI,iCAEI,uBAAOc,QAAQ,SAAf,qBACA,yBAAQL,KAAK,SAASM,SAAUF,KAAKN,kBAArC,UACI,wBAAQI,MAAM,KAAd,gBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,0BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,0BAIJ,uBAAOG,QAAQ,kBAAf,uBACA,uBACIL,KAAK,YACLO,KAAK,QACLD,SAAUF,KAAKN,kBACfI,MAAM,cAEV,uBAAOG,QAAQ,mBAAf,wBACA,uBACIL,KAAK,YACLO,KAAK,QACLD,SAAUF,KAAKN,kBACfI,MAAM,eAIV,wBAAQK,KAAK,SAASJ,QAAS,SAAAJ,GAC3B,EAAKL,oBACL,EAAKZ,MAAM4B,OAAOX,EAAO,EAAKZ,MAAMK,OAAQ,EAAKL,MAAMM,YAF3D,sBAjCY,Y,GApFdkB,IAAMC,WCabC,G,MAhBK,SAAA/B,GAChB,OACI,0BAASC,UAAU,eAAnB,UACI,4BAAID,EAAMgC,aACV,4BAAIhC,EAAMiC,YACV,4BAAIjC,EAAMkC,WACV,4BAAIlC,EAAMmC,WACV,4BAAInC,EAAMoC,SACV,4BAAIpC,EAAMqC,cACV,4BAAIrC,EAAMsC,QACV,4BAAItC,EAAMuC,UACV,4BAAIvC,EAAMwC,gBCKPC,EAhBQ,WACnB,OACI,0BAASxC,UAAU,eAAnB,UACI,oCACA,4CACA,2CACA,0CACA,wCACA,8CACA,uCACA,yCACA,+C,OCgCGyC,EA9CK,CAEhBC,OAAQ,SAAUC,EAAMrC,EAAUC,GAG9B,IAFA,IAAMqC,EAAe,GAEZC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACzBF,EAAKE,GAAGvC,KAAcC,GACtBqC,EAAaG,KAAKJ,EAAKE,IAI/B,OAAOD,GAIXI,KAAM,SAAUL,EAAMrC,EAAU2C,GAC5B,IAAMC,EAAaP,EACfQ,GAAc,EAGlB,EAAG,CACCA,GAAc,EAEd,IAAK,IAAIN,EAAI,EAAGA,EAAIK,EAAWJ,OAAQD,IAGnC,GAAIA,IAAMK,EAAWJ,OAAS,GAAKI,EAAWL,GAAGvC,GAAY4C,EAAWL,EAAI,GAAGvC,GAAW,CACtF6C,GAAc,EACd,IAAIC,EAAOF,EAAWL,GACtBK,EAAWL,GAAKK,EAAWL,EAAI,GAC/BK,EAAWL,EAAI,GAAKO,UAGP,IAAhBD,GAET,MAAmB,cAAfF,EACOC,EAGAA,EAAWG,YCoCfC,E,4MA7DXlD,MAAQ,CACJmD,cAAe,I,EAUnBC,oBAAsB,SAACb,GACnB,IAD4B,EACxBc,EAAa,GADW,cAIId,EAAKe,WAJT,IAI5B,2BAAgD,CAAC,IAAD,yBAApCC,EAAoC,KAA7BC,EAA6B,KAC5CH,EAAWV,KACP,cAAC,EAAD,CAEIhB,WAAY6B,EAASC,GACrB7B,UAAW4B,EAAS5B,UACpBC,SAAU2B,EAAS3B,SACnBC,SAAU0B,EAAS1B,SACnBC,OAAQyB,EAASzB,OACjBC,YAAawB,EAASxB,YACtBC,MAAOuB,EAASvB,MAChBC,QAAO,UAAKsB,EAAStB,QAAd,aAA0BsB,EAASE,KAAnC,aAA4CF,EAASxD,MAArD,YAA8DwD,EAASG,KAC9ExB,SAAUqB,EAASrB,UATdoB,KAPW,8BAoB5B,OAAOF,G,EAGXO,iBAAmB,SAACC,EAAG3D,EAAUC,GAC7B0D,EAAEC,iBAEF,IAAMvB,EAAOF,EAAYC,OAAOyB,EAAc7D,EAAUC,GACxD,EAAKK,SAAS,CAAE2C,cAAe,EAAKC,oBAAoBb,M,EAG5DyB,eAAiB,SAACH,EAAGxD,EAAQC,GACzBuD,EAAEC,iBAEF,IAAMvB,EAAOF,EAAYO,KAAKmB,EAAc1D,EAAQC,GACpD,EAAKE,SAAS,CAAE2C,cAAe,EAAKC,oBAAoBb,M,kEAxCxDtB,KAAKT,SAAS,CACV2C,cAAelC,KAAKmC,oBAAoBW,O,+BA2C5C,OACI,oCACI,cAAC,EAAD,CAASzC,SAAUL,KAAK2C,iBAAkBrC,OAAQN,KAAK+C,iBAGvD,cAAC,EAAD,IACC/C,KAAKjB,MAAMmD,qB,GAxDV3B,IAAMC,WCTxBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c3af372.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/toolbar-options.css';\r\n\r\nconst ToolbarOptions = props => {\r\n    return (\r\n        <section className={`toolbar-options ${props.barState}`}>\r\n            {props.children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ToolbarOptions;","import React from 'react';\r\nimport '../stylesheets/toolbar.css';\r\n\r\n//Components\r\nimport ToolbarOptions from './ToolbarOptions.js';\r\n\r\nclass Toolbar extends React.Component {\r\n    state = {\r\n        filterOptionsBar: 'init-bar',\r\n        filterBy: 'id',\r\n        filterValue: '',\r\n        sortOptionsBar: 'init-bar',\r\n        sortBy: 'id',\r\n        sortValue: ''\r\n    }\r\n\r\n    handleHideAllBars = () => {\r\n        if (this.state.filterOptionsBar === 'show-bar') {\r\n            this.setState({ filterOptionsBar: 'hide-bar' });\r\n        }\r\n        if (this.state.sortOptionsBar === 'show-bar') {\r\n            this.setState({ sortOptionsBar: 'hide-bar' });\r\n        }\r\n    }\r\n\r\n    // Toggles Display Class of ToolbarOptions Component\r\n    handleBarToggle = toolbarKey => {\r\n        if (this.state[toolbarKey] === 'init-bar' || this.state[toolbarKey] === 'hide-bar') {\r\n            this.handleHideAllBars();\r\n            this.setState({ [toolbarKey]: 'show-bar' });\r\n        }\r\n        else {\r\n            this.setState({ [toolbarKey]: 'hide-bar' });\r\n        }\r\n    }\r\n\r\n    handleChangeInput = event => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <nav>\r\n                    <h1>Employee Directory</h1>\r\n\r\n                    <ul>\r\n                        {/* Display Toolbar Options */}\r\n                        <li onClick={() => this.handleBarToggle('filterOptionsBar')}>Filter</li>\r\n                        <li onClick={() => this.handleBarToggle('sortOptionsBar')}>Sort</li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                {/* Toolbar Options */}\r\n                <ToolbarOptions key=\"1\" barState={this.state.filterOptionsBar}>\r\n                    <form>\r\n                        {/* Filter By Options */}\r\n                        <label htmlFor=\"filterBy\">Filter By</label>\r\n                        <select name=\"filterBy\" onChange={this.handleChangeInput}>\r\n                            <option value=\"id\">ID</option>\r\n                            <option value=\"firstName\">First Name</option>\r\n                            <option value=\"lastName\">Last Name</option>\r\n                            <option value=\"position\">Position</option>\r\n                            <option value=\"salary\">Salary</option>\r\n                            <option value=\"phoneNumber\">Phone Number</option>\r\n                            <option value=\"email\">Email</option>\r\n                            <option value=\"address\">Address</option>\r\n                            <option value=\"hireDate\">Hire Date</option>\r\n                        </select>\r\n\r\n                        {/* Filter Value Field */}\r\n                        <input\r\n                            name=\"filterValue\"\r\n                            type='text'\r\n                            onChange={this.handleChangeInput}\r\n                            value={this.state.filterValue}\r\n                            placeholder=\"Value\"\r\n                        />\r\n\r\n                        {/* Filter Method Button */}\r\n                        <button type=\"submit\" onClick={event => {\r\n                            this.handleHideAllBars();\r\n                            this.props.filterCB(event, this.state.filterBy, this.state.filterValue)\r\n                        }}>Filter</button>\r\n                    </form>\r\n                </ToolbarOptions>\r\n\r\n                <ToolbarOptions key=\"2\" barState={this.state.sortOptionsBar}>\r\n                    <form>\r\n                        {/* Sort By Options */}\r\n                        <label htmlFor=\"sortBy\">Sort By</label>\r\n                        <select name=\"sortBy\" onChange={this.handleChangeInput}>\r\n                            <option value=\"id\">ID</option>\r\n                            <option value=\"firstName\">First Name</option>\r\n                            <option value=\"lastName\">Last Name</option>\r\n                            <option value=\"position\">Position</option>\r\n                            <option value=\"salary\">Salary</option>\r\n                            <option value=\"phoneNumber\">Phone Number</option>\r\n                            <option value=\"email\">Email</option>\r\n                            <option value=\"address\">Address</option>\r\n                            <option value=\"hireDate\">Hire Date</option>\r\n                        </select>\r\n\r\n                        {/* Sort Value Options */}\r\n                        <label htmlFor=\"ascending-value\">Ascending</label>\r\n                        <input\r\n                            name=\"sortValue\"\r\n                            type=\"radio\"\r\n                            onChange={this.handleChangeInput}\r\n                            value=\"ascending\"\r\n                        />\r\n                        <label htmlFor=\"descending-value\">Descending</label>\r\n                        <input\r\n                            name=\"sortValue\"\r\n                            type=\"radio\"\r\n                            onChange={this.handleChangeInput}\r\n                            value=\"descending\"\r\n                        />\r\n\r\n                        {/* Sort Method Button */}\r\n                        <button type=\"submit\" onClick={event => {\r\n                            this.handleHideAllBars();\r\n                            this.props.sortCB(event, this.state.sortBy, this.state.sortValue)\r\n                        }}>Sort</button>\r\n                    </form>\r\n                </ToolbarOptions>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport '../stylesheets/employee-row.css';\r\n\r\nconst EmployeeRow = props => {\r\n    return (\r\n        <section className='employee-row'>\r\n            <p>{props.employeeId}</p>\r\n            <p>{props.firstName}</p>\r\n            <p>{props.lastName}</p>\r\n            <p>{props.position}</p>\r\n            <p>{props.salary}</p>\r\n            <p>{props.phoneNumber}</p>\r\n            <p>{props.email}</p>\r\n            <p>{props.address}</p>\r\n            <p>{props.hireDate}</p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default EmployeeRow;","import React from 'react';\r\nimport '../stylesheets/employee-row.css';\r\n\r\nconst EmployeeHeader = () => {\r\n    return (\r\n        <section className='employee-row'>\r\n            <h6>ID</h6>\r\n            <h6>First Name</h6>\r\n            <h6>Last Name</h6>\r\n            <h6>Position</h6>\r\n            <h6>Salary</h6>\r\n            <h6>Phone Number</h6>\r\n            <h6>Email</h6>\r\n            <h6>Address</h6>\r\n            <h6>Hire Date</h6>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default EmployeeHeader;","const processData = {\r\n    // Return Filtered Array of Data\r\n    filter: function (data, filterBy, filterValue) {\r\n        const dataFiltered = [];\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][filterBy] === filterValue) {\r\n                dataFiltered.push(data[i]);\r\n            }\r\n        }\r\n\r\n        return dataFiltered;\r\n    },\r\n\r\n    //Return Sorted Array of Data\r\n    sort: function (data, filterBy, filterData) {\r\n        const dataSorted = data;\r\n        let hasSwitched = false;\r\n\r\n        // Bubble Sort Algorithm\r\n        do {\r\n            hasSwitched = false;\r\n\r\n            for (let i = 0; i < dataSorted.length; i++) {\r\n\r\n                // If value is greater than next value, switch \r\n                if (i !== dataSorted.length - 1 && dataSorted[i][filterBy] > dataSorted[i + 1][filterBy]) {\r\n                    hasSwitched = true;\r\n                    let hold = dataSorted[i];\r\n                    dataSorted[i] = dataSorted[i + 1];\r\n                    dataSorted[i + 1] = hold;\r\n                }\r\n            }\r\n        } while (hasSwitched === true);\r\n\r\n        if (filterData === 'ascending') {\r\n            return dataSorted;\r\n        }\r\n        else {\r\n            return dataSorted.reverse();\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default processData;","import React from 'react';\r\nimport './stylesheets/reset.css';\r\nimport './stylesheets/main.css'\r\n\r\n// Components\r\nimport Toolbar from './components/Toolbar.js';\r\nimport EmployeeRow from './components/EmployeeRow.js';\r\nimport EmployeeHeader from './components/EmployeeHeader.js';\r\n\r\n//Assets\r\nimport employeeData from './assets/employee-data.json';\r\nimport processData from './assets/processData.js'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        employeeTable: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            employeeTable: this.handleEmployeeTable(employeeData)\r\n        });\r\n    }\r\n\r\n    // Takes an object of employee data and returns an array of EmployeeRow components \r\n    handleEmployeeTable = (data) => {\r\n        let renderData = [];\r\n\r\n        // Creates JSX EmployeeRow component for all employeeData\r\n        for (const [index, employee] of data.entries()) {\r\n            renderData.push(\r\n                <EmployeeRow\r\n                    key={index}\r\n                    employeeId={employee.id}\r\n                    firstName={employee.firstName}\r\n                    lastName={employee.lastName}\r\n                    position={employee.position}\r\n                    salary={employee.salary}\r\n                    phoneNumber={employee.phoneNumber}\r\n                    email={employee.email}\r\n                    address={`${employee.address}, ${employee.city}, ${employee.state} ${employee.zip}`}\r\n                    hireDate={employee.hireDate}\r\n                />);\r\n        }\r\n\r\n        return renderData;\r\n    }\r\n\r\n    handleFilterData = (e, filterBy, filterValue) => {\r\n        e.preventDefault();\r\n\r\n        const data = processData.filter(employeeData, filterBy, filterValue);\r\n        this.setState({ employeeTable: this.handleEmployeeTable(data) });\r\n    }\r\n\r\n    handleSortData = (e, sortBy, sortValue) => {\r\n        e.preventDefault();\r\n\r\n        const data = processData.sort(employeeData, sortBy, sortValue);\r\n        this.setState({ employeeTable: this.handleEmployeeTable(data) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article>\r\n                <Toolbar filterCB={this.handleFilterData} sortCB={this.handleSortData} />\r\n\r\n                {/* Employee Data */}\r\n                <EmployeeHeader />\r\n                {this.state.employeeTable}\r\n            </article >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}