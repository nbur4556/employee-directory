{"version":3,"sources":["components/ToolbarOptions.js","components/Toolbar.js","components/EmployeeRow.js","components/EmployeeHeader.js","assets/api.js","assets/processData.js","App.js","index.js"],"names":["ToolbarOptions","props","className","barState","children","Toolbar","state","filterOptionsBar","filterBy","filterValue","sortOptionsBar","sortBy","sortValue","handleHideAllBars","setState","handleBarToggle","toolbarKey","handleChangeInput","event","name","target","value","onClick","this","htmlFor","onChange","type","placeholder","filterCB","sortCB","React","Component","EmployeeRow","firstName","lastName","phoneNumber","email","location","EmployeeHeader","api","resultAmount","seed","cb","url","fetch","then","response","json","data","processData","filter","dataFiltered","i","length","fullLocation","city","nat","first","last","push","sort","sortData","dataSorted","hasSwitched","hold","reverse","App","employeeData","employeeTable","handleEmployeeTable","renderData","entries","index","employee","phone","handleFilterData","e","preventDefault","handleSortData","results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAWeA,G,YARQ,SAAAC,GACnB,OACI,yBAASC,UAAS,0BAAqBD,EAAME,UAA7C,SACKF,EAAMG,aCwHJC,E,4MAvHXC,MAAQ,CACJC,iBAAkB,WAClBC,SAAU,YACVC,YAAa,GACbC,eAAgB,WAChBC,OAAQ,YACRC,UAAW,I,EAGfC,kBAAoB,WACoB,aAAhC,EAAKP,MAAMC,kBACX,EAAKO,SAAS,CAAEP,iBAAkB,aAEJ,aAA9B,EAAKD,MAAMI,gBACX,EAAKI,SAAS,CAAEJ,eAAgB,c,EAKxCK,gBAAkB,SAAAC,GACiB,aAA3B,EAAKV,MAAMU,IAAyD,aAA3B,EAAKV,MAAMU,IACpD,EAAKH,oBACL,EAAKC,SAAL,eAAiBE,EAAa,cAG9B,EAAKF,SAAL,eAAiBE,EAAa,c,EAItCC,kBAAoB,SAAAC,GAChB,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAEzB,EAAKP,SAAL,eAAiBK,EAAOE,K,uDAGlB,IAAD,OACL,OACI,mCACI,gCACI,oDAEA,+BAEI,oBAAIC,QAAS,kBAAM,EAAKP,gBAAgB,qBAAxC,oBACA,oBAAIO,QAAS,kBAAM,EAAKP,gBAAgB,mBAAxC,wBAKR,cAAC,EAAD,CAAwBZ,SAAUoB,KAAKjB,MAAMC,iBAA7C,SACI,iCAEI,uBAAOiB,QAAQ,WAAf,uBACA,yBAAQL,KAAK,WAAWM,SAAUF,KAAKN,kBAAvC,UACI,wBAAQI,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,QAAd,0BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,yBAIJ,uBACIF,KAAK,cACLO,KAAK,OACLD,SAAUF,KAAKN,kBACfI,MAAOE,KAAKjB,MAAMG,YAClBkB,YAAY,UAIhB,wBAAQD,KAAK,SAASJ,QAAS,SAAAJ,GAC3B,EAAKL,oBACL,EAAKZ,MAAM2B,SAASV,EAAO,EAAKZ,MAAME,SAAU,EAAKF,MAAMG,cAF/D,wBAtBY,KA6BpB,cAAC,EAAD,CAAwBN,SAAUoB,KAAKjB,MAAMI,eAA7C,SACI,iCAEI,uBAAOc,QAAQ,SAAf,qBACA,yBAAQL,KAAK,SAASM,SAAUF,KAAKN,kBAArC,UACI,wBAAQI,MAAM,YAAd,wBACA,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,QAAd,0BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,yBAIJ,uBAAOG,QAAQ,kBAAf,uBACA,uBACIL,KAAK,YACLO,KAAK,QACLD,SAAUF,KAAKN,kBACfI,MAAM,cAEV,uBAAOG,QAAQ,mBAAf,wBACA,uBACIL,KAAK,YACLO,KAAK,QACLD,SAAUF,KAAKN,kBACfI,MAAM,eAIV,wBAAQK,KAAK,SAASJ,QAAS,SAAAJ,GAC3B,EAAKL,oBACL,EAAKZ,MAAM4B,OAAOX,EAAO,EAAKZ,MAAMK,OAAQ,EAAKL,MAAMM,YAF3D,sBA7BY,Y,GAhFdkB,IAAMC,WCSbC,G,KAZK,SAAA/B,GAChB,OACI,0BAASC,UAAU,eAAnB,UACI,4BAAID,EAAMgC,YACV,4BAAIhC,EAAMiC,WACV,4BAAIjC,EAAMkC,cACV,4BAAIlC,EAAMmC,QACV,4BAAInC,EAAMoC,gBCKPC,EAZQ,WACnB,OACI,0BAASpC,UAAU,eAAnB,UACI,4CACA,2CACA,8CACA,uCACA,8CCGGqC,EAbH,SAACC,EAAcC,EAAMC,GAC7B,IAAIC,EAAG,6CAAyCH,EAAzC,oBAGM,OAATC,IAAiBE,GAAG,gBAAaF,IAErCG,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFN,EAAGM,OCuEAC,EAhFK,CAEhBC,OAAQ,SAAUF,EAAMxC,EAAUC,GAG9B,IAFA,IAAM0C,EAAe,GAEZC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAAK,CAClC,IAAIE,EAAY,UAAMN,EAAKI,GAAGf,SAASkB,KAAvB,YAA+BP,EAAKI,GAAGf,SAAS/B,MAAhD,aAA0D0C,EAAKI,GAAGI,MAEjE,cAAbhD,GAA4BwC,EAAKI,GAAGjC,KAAKsC,QAAUhD,GAIjC,aAAbD,GAA2BwC,EAAKI,GAAGjC,KAAKuC,OAASjD,GAIpC,aAAbD,GAA2B8C,IAAiB7C,GAI5CuC,EAAKI,GAAG5C,KAAcC,IAV3B0C,EAAaQ,KAAKX,EAAKI,IAgB/B,OAAOD,GAIXS,KAAM,SAAUZ,EAAMrC,EAAQkD,GAC1B,IAAMC,EAAad,EACfe,GAAc,EAGlB,EAAG,CACCA,GAAc,EAEd,IAAK,IAAIX,EAAI,EAAGA,EAAIU,EAAWT,OAAQD,IACnC,GAAe,cAAXzC,GAA0ByC,IAAMU,EAAWT,OAAS,GAAKS,EAAWV,GAAGjC,KAAKsC,MAAQK,EAAWV,EAAI,GAAGjC,KAAKsC,MAAO,CAElHM,GAAc,EACd,IAAIC,EAAOF,EAAWV,GACtBU,EAAWV,GAAKU,EAAWV,EAAI,GAC/BU,EAAWV,EAAI,GAAKY,OAEnB,GAAe,aAAXrD,GAAyByC,IAAMU,EAAWT,OAAS,GAAKS,EAAWV,GAAGjC,KAAKuC,KAAOI,EAAWV,EAAI,GAAGjC,KAAKuC,KAAM,CAEpHK,GAAc,EACd,IAAIC,EAAOF,EAAWV,GACtBU,EAAWV,GAAKU,EAAWV,EAAI,GAC/BU,EAAWV,EAAI,GAAKY,OAEnB,GAAe,aAAXrD,GAAyByC,IAAMU,EAAWT,OAAS,GAAKS,EAAWV,GAAGf,SAASkB,KAAOO,EAAWV,EAAI,GAAGf,SAASkB,KAAM,CAE5HQ,GAAc,EACd,IAAIC,EAAOF,EAAWV,GACtBU,EAAWV,GAAKU,EAAWV,EAAI,GAC/BU,EAAWV,EAAI,GAAKY,OAEnB,GAAIZ,IAAMU,EAAWT,OAAS,GAAKS,EAAWV,GAAGzC,GAAUmD,EAAWV,EAAI,GAAGzC,GAAS,CAEvFoD,GAAc,EACd,IAAIC,EAAOF,EAAWV,GACtBU,EAAWV,GAAKU,EAAWV,EAAI,GAC/BU,EAAWV,EAAI,GAAKY,UAGP,IAAhBD,GAET,MAAiB,eAAbF,EACOC,EAAWG,UAGXH,ICCJI,E,4MA7DX5D,MAAQ,CACJ6D,aAAc,GACdC,cAAe,I,EAanBC,oBAAsB,SAACrB,GACnB,IAD4B,EACxBsB,EAAa,GADW,cAIItB,EAAKuB,WAJT,IAI5B,2BAAgD,CAAC,IAAD,yBAApCC,EAAoC,KAA7BC,EAA6B,KAC5CH,EAAWX,KACP,cAAC,EAAD,CAEI1B,UAAWwC,EAAStD,KAAKsC,MACzBvB,SAAUuC,EAAStD,KAAKuC,KACxBvB,YAAasC,EAASC,MACtBtC,MAAOqC,EAASrC,MAChBC,SAAQ,UAAKoC,EAASpC,SAASkB,KAAvB,YAA+BkB,EAASpC,SAAS/B,MAAjD,aAA2DmE,EAASjB,MALvEgB,KAPW,8BAgB5B,OAAOF,G,EAGXK,iBAAmB,SAACC,EAAGpE,EAAUC,GAC7BmE,EAAEC,iBAEF,IAAM7B,EAAOC,EAAYC,OAAO,EAAK5C,MAAM6D,aAAc3D,EAAUC,GACnE,EAAKK,SAAS,CAAEsD,cAAe,EAAKC,oBAAoBrB,M,EAG5D8B,eAAiB,SAACF,EAAGjE,EAAQC,GACzBgE,EAAEC,iBAEF,IAAM7B,EAAOC,EAAYW,KAAK,EAAKtD,MAAM6D,aAAcxD,EAAQC,GAC/D,EAAKE,SAAS,CAAEsD,cAAe,EAAKC,oBAAoBrB,M,kEAxCvC,IAAD,OAChBT,EAAI,IAAM,MAAM,SAAAO,GACZ,EAAKhC,SAAS,CACVqD,aAAcrB,EAASiC,QACvBX,cAAe,EAAKC,oBAAoBvB,EAASiC,gB,+BAwCzD,OACI,oCACI,cAAC,EAAD,CAASnD,SAAUL,KAAKoD,iBAAkB9C,OAAQN,KAAKuD,iBAGvD,cAAC,EAAD,IACCvD,KAAKjB,MAAM8D,qB,GAxDVtC,IAAMC,WCTxBiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ffc57b73.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/toolbar-options.css';\r\n\r\nconst ToolbarOptions = props => {\r\n    return (\r\n        <section className={`toolbar-options ${props.barState}`}>\r\n            {props.children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ToolbarOptions;","import React from 'react';\r\nimport '../stylesheets/toolbar.css';\r\n\r\n//Components\r\nimport ToolbarOptions from './ToolbarOptions.js';\r\n\r\nclass Toolbar extends React.Component {\r\n    state = {\r\n        filterOptionsBar: 'init-bar',\r\n        filterBy: 'firstName',\r\n        filterValue: '',\r\n        sortOptionsBar: 'init-bar',\r\n        sortBy: 'firstName',\r\n        sortValue: ''\r\n    }\r\n\r\n    handleHideAllBars = () => {\r\n        if (this.state.filterOptionsBar === 'show-bar') {\r\n            this.setState({ filterOptionsBar: 'hide-bar' });\r\n        }\r\n        if (this.state.sortOptionsBar === 'show-bar') {\r\n            this.setState({ sortOptionsBar: 'hide-bar' });\r\n        }\r\n    }\r\n\r\n    // Toggles Display Class of ToolbarOptions Component\r\n    handleBarToggle = toolbarKey => {\r\n        if (this.state[toolbarKey] === 'init-bar' || this.state[toolbarKey] === 'hide-bar') {\r\n            this.handleHideAllBars();\r\n            this.setState({ [toolbarKey]: 'show-bar' });\r\n        }\r\n        else {\r\n            this.setState({ [toolbarKey]: 'hide-bar' });\r\n        }\r\n    }\r\n\r\n    handleChangeInput = event => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <nav>\r\n                    <h1>Employee Directory</h1>\r\n\r\n                    <ul>\r\n                        {/* Display Toolbar Options */}\r\n                        <li onClick={() => this.handleBarToggle('filterOptionsBar')}>Filter</li>\r\n                        <li onClick={() => this.handleBarToggle('sortOptionsBar')}>Sort</li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                {/* Toolbar Options */}\r\n                <ToolbarOptions key=\"1\" barState={this.state.filterOptionsBar}>\r\n                    <form>\r\n                        {/* Filter By Options */}\r\n                        <label htmlFor=\"filterBy\">Filter By</label>\r\n                        <select name=\"filterBy\" onChange={this.handleChangeInput}>\r\n                            <option value=\"firstName\">First Name</option>\r\n                            <option value=\"lastName\">Last Name</option>\r\n                            <option value=\"phone\">Phone Number</option>\r\n                            <option value=\"email\">Email</option>\r\n                            <option value=\"location\">Location</option>\r\n                        </select>\r\n\r\n                        {/* Filter Value Field */}\r\n                        <input\r\n                            name=\"filterValue\"\r\n                            type='text'\r\n                            onChange={this.handleChangeInput}\r\n                            value={this.state.filterValue}\r\n                            placeholder=\"Value\"\r\n                        />\r\n\r\n                        {/* Filter Method Button */}\r\n                        <button type=\"submit\" onClick={event => {\r\n                            this.handleHideAllBars();\r\n                            this.props.filterCB(event, this.state.filterBy, this.state.filterValue)\r\n                        }}>Filter</button>\r\n                    </form>\r\n                </ToolbarOptions>\r\n\r\n                <ToolbarOptions key=\"2\" barState={this.state.sortOptionsBar}>\r\n                    <form>\r\n                        {/* Sort By Options */}\r\n                        <label htmlFor=\"sortBy\">Sort By</label>\r\n                        <select name=\"sortBy\" onChange={this.handleChangeInput}>\r\n                            <option value=\"firstName\">First Name</option>\r\n                            <option value=\"lastName\">Last Name</option>\r\n                            <option value=\"phone\">Phone Number</option>\r\n                            <option value=\"email\">Email</option>\r\n                            <option value=\"location\">Location</option>\r\n                        </select>\r\n\r\n                        {/* Sort Value Options */}\r\n                        <label htmlFor=\"ascending-value\">Ascending</label>\r\n                        <input\r\n                            name=\"sortValue\"\r\n                            type=\"radio\"\r\n                            onChange={this.handleChangeInput}\r\n                            value=\"ascending\"\r\n                        />\r\n                        <label htmlFor=\"descending-value\">Descending</label>\r\n                        <input\r\n                            name=\"sortValue\"\r\n                            type=\"radio\"\r\n                            onChange={this.handleChangeInput}\r\n                            value=\"descending\"\r\n                        />\r\n\r\n                        {/* Sort Method Button */}\r\n                        <button type=\"submit\" onClick={event => {\r\n                            this.handleHideAllBars();\r\n                            this.props.sortCB(event, this.state.sortBy, this.state.sortValue)\r\n                        }}>Sort</button>\r\n                    </form>\r\n                </ToolbarOptions>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport '../stylesheets/employee-row.css';\r\n\r\nconst EmployeeRow = props => {\r\n    return (\r\n        <section className='employee-row'>\r\n            <p>{props.firstName}</p>\r\n            <p>{props.lastName}</p>\r\n            <p>{props.phoneNumber}</p>\r\n            <p>{props.email}</p>\r\n            <p>{props.location}</p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default EmployeeRow;","import React from 'react';\r\nimport '../stylesheets/employee-row.css';\r\n\r\nconst EmployeeHeader = () => {\r\n    return (\r\n        <section className='employee-row'>\r\n            <h6>First Name</h6>\r\n            <h6>Last Name</h6>\r\n            <h6>Phone Number</h6>\r\n            <h6>Email</h6>\r\n            <h6>Location</h6>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default EmployeeHeader;","const api = (resultAmount, seed, cb) => {\r\n    let url = `https://randomuser.me/api/?results=${resultAmount}&nat=us,dk,fr,gb`\r\n\r\n    // If seed is not null, use seed\r\n    if (seed !== null) { url += `&seed=${seed}`; }\r\n\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            cb(data);\r\n        });\r\n}\r\n\r\nexport default api;","const processData = {\r\n    // Return Filtered Array of Data\r\n    filter: function (data, filterBy, filterValue) {\r\n        const dataFiltered = [];\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            let fullLocation = `${data[i].location.city} ${data[i].location.state}, ${data[i].nat}`\r\n\r\n            if (filterBy === \"firstName\" && data[i].name.first === filterValue) {\r\n                // Handle First Name\r\n                dataFiltered.push(data[i]);\r\n            }\r\n            else if (filterBy === \"lastName\" && data[i].name.last === filterValue) {\r\n                // Handle Last Name\r\n                dataFiltered.push(data[i]);\r\n            }\r\n            else if (filterBy === \"location\" && fullLocation === filterValue) {\r\n                // Handle Location\r\n                dataFiltered.push(data[i]);\r\n            }\r\n            else if (data[i][filterBy] === filterValue) {\r\n                // Handle Default\r\n                dataFiltered.push(data[i]);\r\n            }\r\n        }\r\n\r\n        return dataFiltered;\r\n    },\r\n\r\n    //Return Sorted Array of Data\r\n    sort: function (data, sortBy, sortData) {\r\n        const dataSorted = data;\r\n        let hasSwitched = false;\r\n\r\n        // Bubble Sort Algorithm\r\n        do {\r\n            hasSwitched = false;\r\n\r\n            for (let i = 0; i < dataSorted.length; i++) {\r\n                if (sortBy === \"firstName\" && i !== dataSorted.length - 1 && dataSorted[i].name.first > dataSorted[i + 1].name.first) {\r\n                    //Handle First Name\r\n                    hasSwitched = true;\r\n                    let hold = dataSorted[i];\r\n                    dataSorted[i] = dataSorted[i + 1];\r\n                    dataSorted[i + 1] = hold;\r\n                }\r\n                else if (sortBy === \"lastName\" && i !== dataSorted.length - 1 && dataSorted[i].name.last > dataSorted[i + 1].name.last) {\r\n                    // Handle Last Name\r\n                    hasSwitched = true;\r\n                    let hold = dataSorted[i];\r\n                    dataSorted[i] = dataSorted[i + 1];\r\n                    dataSorted[i + 1] = hold;\r\n                }\r\n                else if (sortBy === \"location\" && i !== dataSorted.length - 1 && dataSorted[i].location.city > dataSorted[i + 1].location.city) {\r\n                    // Handle Location\r\n                    hasSwitched = true;\r\n                    let hold = dataSorted[i];\r\n                    dataSorted[i] = dataSorted[i + 1];\r\n                    dataSorted[i + 1] = hold;\r\n                }\r\n                else if (i !== dataSorted.length - 1 && dataSorted[i][sortBy] > dataSorted[i + 1][sortBy]) {\r\n                    // Handle Default\r\n                    hasSwitched = true;\r\n                    let hold = dataSorted[i];\r\n                    dataSorted[i] = dataSorted[i + 1];\r\n                    dataSorted[i + 1] = hold;\r\n                }\r\n            }\r\n        } while (hasSwitched === true);\r\n\r\n        if (sortData === 'descending') {\r\n            return dataSorted.reverse();\r\n        }\r\n        else {\r\n            return dataSorted\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default processData;","import React from 'react';\r\nimport './stylesheets/reset.css';\r\nimport './stylesheets/main.css'\r\n\r\n// Components\r\nimport Toolbar from './components/Toolbar.js';\r\nimport EmployeeRow from './components/EmployeeRow.js';\r\nimport EmployeeHeader from './components/EmployeeHeader.js';\r\n\r\n//Assets\r\nimport api from './assets/api.js';\r\nimport processData from './assets/processData.js'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        employeeData: {},\r\n        employeeTable: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        api(1000, null, response => {\r\n            this.setState({\r\n                employeeData: response.results,\r\n                employeeTable: this.handleEmployeeTable(response.results)\r\n            });\r\n        });\r\n    }\r\n\r\n    // Takes an object of employee data and returns an array of EmployeeRow components \r\n    handleEmployeeTable = (data) => {\r\n        let renderData = [];\r\n\r\n        // Creates JSX EmployeeRow component for all employeeData\r\n        for (const [index, employee] of data.entries()) {\r\n            renderData.push(\r\n                <EmployeeRow\r\n                    key={index}\r\n                    firstName={employee.name.first}\r\n                    lastName={employee.name.last}\r\n                    phoneNumber={employee.phone}\r\n                    email={employee.email}\r\n                    location={`${employee.location.city} ${employee.location.state}, ${employee.nat}`}\r\n                />);\r\n        }\r\n\r\n        return renderData;\r\n    }\r\n\r\n    handleFilterData = (e, filterBy, filterValue) => {\r\n        e.preventDefault();\r\n\r\n        const data = processData.filter(this.state.employeeData, filterBy, filterValue);\r\n        this.setState({ employeeTable: this.handleEmployeeTable(data) });\r\n    }\r\n\r\n    handleSortData = (e, sortBy, sortValue) => {\r\n        e.preventDefault();\r\n\r\n        const data = processData.sort(this.state.employeeData, sortBy, sortValue);\r\n        this.setState({ employeeTable: this.handleEmployeeTable(data) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article>\r\n                <Toolbar filterCB={this.handleFilterData} sortCB={this.handleSortData} />\r\n\r\n                {/* Employee Data */}\r\n                <EmployeeHeader />\r\n                {this.state.employeeTable}\r\n            </article >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}